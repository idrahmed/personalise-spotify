[{"C:\\Users\\ID\\Desktop\\projects\\spotifyapi\\spotifyapi\\src\\components\\TopArtists.js":"1","C:\\Users\\ID\\Desktop\\projects\\spotifyapi\\spotifyapi\\src\\App.js":"2","C:\\Users\\ID\\Desktop\\projects\\spotifyapi\\spotifyapi\\src\\components\\Header.js":"3","C:\\Users\\ID\\Desktop\\projects\\spotifyapi\\spotifyapi\\src\\components\\TopTracks.js":"4","C:\\Users\\ID\\Desktop\\projects\\spotifyapi\\spotifyapi\\src\\components\\Recommendations.js":"5","C:\\Users\\ID\\Desktop\\projects\\spotifyapi\\spotifyapi\\src\\components\\Sidebar.js":"6","C:\\Users\\ID\\Desktop\\projects\\spotifyapi\\spotifyapi\\src\\components\\Recent.js":"7","C:\\Users\\ID\\Desktop\\projects\\spotifyapi\\spotifyapi\\src\\axios.js":"8","C:\\Users\\ID\\Desktop\\projects\\spotifyapi\\spotifyapi\\src\\components\\Login.js":"9","C:\\Users\\ID\\Desktop\\projects\\spotifyapi\\spotifyapi\\src\\reportWebVitals.js":"10","C:\\Users\\ID\\Desktop\\projects\\spotifyapi\\spotifyapi\\src\\components\\SavedTracksContext.js":"11","C:\\Users\\ID\\Desktop\\projects\\spotifyapi\\spotifyapi\\src\\index.js":"12","C:\\Users\\ID\\Desktop\\projects\\spotifyapi\\spotifyapi\\src\\components\\selectedOptionStyle.js":"13","C:\\Users\\ID\\Desktop\\projects\\spotifyapi\\spotifyapi\\src\\components\\LoadingSkeleton.js":"14"},{"size":4532,"mtime":1614937413401,"results":"15","hashOfConfig":"16"},{"size":2225,"mtime":1614937113260,"results":"17","hashOfConfig":"16"},{"size":2811,"mtime":1614936909341,"results":"18","hashOfConfig":"16"},{"size":4357,"mtime":1614937101007,"results":"19","hashOfConfig":"16"},{"size":4069,"mtime":1614936246532,"results":"20","hashOfConfig":"16"},{"size":2070,"mtime":1613130957968,"results":"21","hashOfConfig":"16"},{"size":2727,"mtime":1614936539959,"results":"22","hashOfConfig":"16"},{"size":180,"mtime":1614937702962,"results":"23","hashOfConfig":"16"},{"size":1479,"mtime":1614938059721,"results":"24","hashOfConfig":"16"},{"size":362,"mtime":1607914306397,"results":"25","hashOfConfig":"16"},{"size":458,"mtime":1613726765170,"results":"26","hashOfConfig":"16"},{"size":1064,"mtime":1613726183756,"results":"27","hashOfConfig":"16"},{"size":124,"mtime":1613129981752,"results":"28","hashOfConfig":"16"},{"size":491,"mtime":1614936106065,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"by36cs",{"filePath":"32","messages":"33","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"C:\\Users\\ID\\Desktop\\projects\\spotifyapi\\spotifyapi\\src\\components\\TopArtists.js",[],"C:\\Users\\ID\\Desktop\\projects\\spotifyapi\\spotifyapi\\src\\App.js",["62","63"],"C:\\Users\\ID\\Desktop\\projects\\spotifyapi\\spotifyapi\\src\\components\\Header.js",[],"C:\\Users\\ID\\Desktop\\projects\\spotifyapi\\spotifyapi\\src\\components\\TopTracks.js",["64"],"import React, { useEffect, useState, useContext } from \"react\";\r\nimport \"../styles/Body.css\";\r\nimport axios from \"../axios\";\r\nimport { IconButton } from \"@material-ui/core\";\r\nimport FavoriteBorderIcon from \"@material-ui/icons/FavoriteBorder\";\r\nimport Header from \"./Header\";\r\nimport { SavedTracksContext } from \"./SavedTracksContext\";\r\nimport { selectedOption } from \"./selectedOptionStyle\";\r\nimport { motion } from \"framer-motion\";\r\nimport LoadingSkeleton from \"./LoadingSkeleton\";\r\n\r\n\r\nfunction TopTracks({ useruri, user, userName }) {\r\n  const [top_tracks, setTracks] = useState(null);\r\n  const [option, selectOption] = useState(\"All Time\");\r\n  const [img, setImg] = useState(\"\");\r\n  const id = top_tracks?.map((track) => track.uri);\r\n  const [state, setState] = useContext(SavedTracksContext);\r\n\r\n  useEffect(() => {\r\n    if (option === \"All Time\") {\r\n      axios.get(\"/top-tracks/long_term\").then((res) => {\r\n        setTracks(res.data);\r\n      });\r\n    } else if (option === \"6 mos\") {\r\n      axios.get(\"/top-tracks/medium_term\").then((res) => {\r\n        setTracks(res.data);\r\n      });\r\n    } else if (option === \"3 mos\") {\r\n      axios.get(\"/top-tracks/short_term\").then((res) => {\r\n        setTracks(res.data);\r\n      });\r\n    }\r\n  }, [option]);\r\n\r\n  useEffect(() => {\r\n    setImg(\r\n      top_tracks?.[Math.floor(Math.random() * top_tracks.length)]?.album\r\n        ?.images[1]?.url\r\n    );\r\n  }, [top_tracks]);\r\n\r\n  const onClick = (id) => {\r\n    setState(id);\r\n  };\r\n\r\n  return (\r\n    <div className=\"page\">\r\n      <motion.div\r\n        initial={{ opacity: 0 }}\r\n        exit={{ opacity: 0 }}\r\n        animate={{ opacity: 1 }}\r\n      >\r\n        <div className=\"body\">\r\n          <Header\r\n            user={user}\r\n            userName={userName}\r\n            img={img}\r\n            title=\"Top Tracks\"\r\n            id={id}\r\n            option={option}\r\n            useruri={useruri}\r\n          />\r\n          <div className=\"options\">\r\n            <h2\r\n              onClick={() => {\r\n                setTracks(null)\r\n                selectOption(\"All Time\");\r\n              }}\r\n              className=\"option_element\"\r\n              style={option === \"All Time\" ? selectedOption : {}}\r\n            >\r\n              {\" \"}\r\n              All time{\" \"}\r\n            </h2>\r\n            <h2\r\n              onClick={() => {\r\n                setTracks(null)\r\n                selectOption(\"6 mos\");\r\n              }}\r\n              className=\"option_element\"\r\n              style={option === \"6 mos\" ? selectedOption : {}}\r\n            >\r\n              Last 6 months\r\n            </h2>\r\n\r\n            <h2\r\n              onClick={() => {\r\n                setTracks(null)\r\n                selectOption(\"3 mos\");\r\n              }}\r\n              className=\"option_element\"\r\n              style={option === \"3 mos\" ? selectedOption : {}}\r\n            >\r\n              Last month\r\n            </h2>\r\n          </div>\r\n\r\n          <ul className=\"list\">\r\n          {top_tracks?.length === 0 && <h1 className=\"no_data\">No data to display</h1>}\r\n\r\n           {!top_tracks && (\r\n              <div>\r\n              <LoadingSkeleton />\r\n              <LoadingSkeleton />\r\n              <LoadingSkeleton />\r\n              <LoadingSkeleton />\r\n              <LoadingSkeleton />\r\n              </div>\r\n            )}\r\n\r\n            {top_tracks?.map((track) => (\r\n              <div className=\"row\">\r\n                <div className=\"row_content\">\r\n                  <a href={track.uri}>\r\n                    <li className=\"list_elements\">\r\n                      <img\r\n                        className=\"img_tile\"\r\n                        src={track.album.images[2]?.url}\r\n                        alt=\"\"\r\n                      />\r\n                      <div className=\"titles\">\r\n                        <h3>{track.name} </h3>\r\n                        <h4>{track.artists[0].name} </h4>\r\n                      </div>\r\n                    </li>\r\n                  </a>\r\n                </div>\r\n                <div className=\"favourite\">\r\n                  <IconButton onClick={() => onClick(track.id)}>\r\n                    <FavoriteBorderIcon style={{ color: \"de4463\" }} />\r\n                  </IconButton>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      </motion.div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TopTracks;\r\n","C:\\Users\\ID\\Desktop\\projects\\spotifyapi\\spotifyapi\\src\\components\\Recommendations.js",["65"],"import React, { useContext, useEffect, useState } from \"react\";\r\nimport \"../styles/Body.css\";\r\nimport axios from \"../axios\";\r\nimport { IconButton } from \"@material-ui/core\";\r\nimport FavoriteBorderOutlinedIcon from \"@material-ui/icons/FavoriteBorderOutlined\";\r\nimport Header from \"./Header\";\r\nimport { SavedTracksContext } from \"./SavedTracksContext\";\r\nimport { selectedOption } from \"./selectedOptionStyle\";\r\nimport { motion } from \"framer-motion\";\r\nimport LoadingSkeleton from \"./LoadingSkeleton\";\r\n\r\nfunction Recommendations({ user, userName, useruri }) {\r\n  const [recommended, setRecommended] = useState(null);\r\n  const [option, selectOption] = useState(\"Weekly Mix\");\r\n  const [img, setImg] = useState(\"\");\r\n  const id = recommended?.map((track) => track.track.uri);\r\n  const [state, setState] = useContext(SavedTracksContext);\r\n\r\n  useEffect(() => {\r\n    if (option === \"Weekly Mix\") {\r\n      axios.get(\"/recommendations/weekly\").then((res) => {\r\n        setRecommended(res.data);\r\n      });\r\n    } else if (option === \"Daily Mix\") {\r\n      axios.get(\"/recommendations/daily\").then((res) => {\r\n        setRecommended(res.data);\r\n      });\r\n    }\r\n  }, [option]);\r\n\r\n  useEffect(() => {\r\n    setImg(\r\n      recommended?.[Math.floor(Math.random() * recommended.length)]?.track.album\r\n        ?.images[1]?.url\r\n    );\r\n  }, [recommended]);\r\n\r\n  const onClick = (id) => {\r\n    setState(id);\r\n  };\r\n\r\n  return (\r\n    <div className=\"page\">\r\n      <motion.div\r\n        initial={{ opacity: 0 }}\r\n        exit={{ opacity: 0 }}\r\n        animate={{ opacity: 1 }}\r\n      >\r\n        <div className=\"body\">\r\n          <Header\r\n            user={user}\r\n            userName={userName}\r\n            img={img}\r\n            title=\"Recommended\"\r\n            id={id}\r\n            option={option}\r\n            useruri={useruri}\r\n          />\r\n\r\n          <div className=\"options\">\r\n            <h2\r\n              onClick={() => {\r\n                setRecommended(null);\r\n                selectOption(\"Weekly Mix\");\r\n              }}\r\n              className=\"option_element\"\r\n              style={option === \"Weekly Mix\" ? selectedOption : {}}\r\n            >\r\n              Weekly Mix\r\n            </h2>\r\n            <h2\r\n              onClick={() => {\r\n                setRecommended(null);\r\n                selectOption(\"Daily Mix\");\r\n              }}\r\n              className=\"option_element\"\r\n              style={option === \"Daily Mix\" ? selectedOption : {}}\r\n            >\r\n              Daily Mix\r\n            </h2>\r\n          </div>\r\n\r\n          <ul className=\"list\">\r\n            {!recommended && (\r\n              <div>\r\n                <LoadingSkeleton />\r\n                <LoadingSkeleton />\r\n                <LoadingSkeleton />\r\n                <LoadingSkeleton />\r\n                <LoadingSkeleton />\r\n              </div>\r\n            )}\r\n\r\n            {recommended?.length === 0 && (\r\n              <h1 className=\"no_data\">No data to display</h1>\r\n            )}\r\n\r\n            {recommended?.map((track) => (\r\n              <div className=\"row\">\r\n                <div className=\"row_content\">\r\n                  <a href={track.track.uri}>\r\n                    <li className=\"list_elements\">\r\n                      <img\r\n                        className=\"img_tile\"\r\n                        src={track.track.album.images[2]?.url}\r\n                        alt=\"\"\r\n                      />\r\n                      <div className=\"titles\">\r\n                        <h3>{track.track.album.name} </h3>\r\n                        <h4>{track.track.artists[0].name} </h4>\r\n                      </div>\r\n                    </li>\r\n                  </a>\r\n                </div>\r\n                <div className=\"favourite\">\r\n                  <IconButton onClick={() => onClick(track.track.id)}>\r\n                    <FavoriteBorderOutlinedIcon style={{ color: \"de4463\" }} />\r\n                  </IconButton>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      </motion.div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Recommendations;\r\n","C:\\Users\\ID\\Desktop\\projects\\spotifyapi\\spotifyapi\\src\\components\\Sidebar.js",[],"C:\\Users\\ID\\Desktop\\projects\\spotifyapi\\spotifyapi\\src\\components\\Recent.js",["66"],"C:\\Users\\ID\\Desktop\\projects\\spotifyapi\\spotifyapi\\src\\axios.js",[],"C:\\Users\\ID\\Desktop\\projects\\spotifyapi\\spotifyapi\\src\\components\\Login.js",[],"C:\\Users\\ID\\Desktop\\projects\\spotifyapi\\spotifyapi\\src\\reportWebVitals.js",[],"C:\\Users\\ID\\Desktop\\projects\\spotifyapi\\spotifyapi\\src\\components\\SavedTracksContext.js",[],"C:\\Users\\ID\\Desktop\\projects\\spotifyapi\\spotifyapi\\src\\index.js",[],["67","68"],"C:\\Users\\ID\\Desktop\\projects\\spotifyapi\\spotifyapi\\src\\components\\selectedOptionStyle.js",[],["69","70"],"C:\\Users\\ID\\Desktop\\projects\\spotifyapi\\spotifyapi\\src\\components\\LoadingSkeleton.js",[],{"ruleId":"71","severity":1,"message":"72","line":19,"column":17,"nodeType":"73","messageId":"74","endLine":19,"endColumn":25},{"ruleId":"75","severity":1,"message":"76","line":40,"column":6,"nodeType":"77","endLine":40,"endColumn":13,"suggestions":"78"},{"ruleId":"71","severity":1,"message":"79","line":18,"column":10,"nodeType":"73","messageId":"74","endLine":18,"endColumn":15},{"ruleId":"71","severity":1,"message":"79","line":17,"column":10,"nodeType":"73","messageId":"74","endLine":17,"endColumn":15},{"ruleId":"71","severity":1,"message":"79","line":18,"column":10,"nodeType":"73","messageId":"74","endLine":18,"endColumn":15},{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","replacedBy":"83"},{"ruleId":"80","replacedBy":"84"},{"ruleId":"82","replacedBy":"85"},"no-unused-vars","'setState' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'alert'. Either include it or remove the dependency array.","ArrayExpression",["86"],"'state' is assigned a value but never used.","no-native-reassign",["87"],"no-negated-in-lhs",["88"],["87"],["88"],{"desc":"89","fix":"90"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [alert, state]",{"range":"91","text":"92"},[1331,1338],"[alert, state]"]