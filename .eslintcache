[{"C:\\Users\\ID\\Desktop\\projects\\spotifyapi\\spotifyapi\\src\\components\\TopArtists.js":"1","C:\\Users\\ID\\Desktop\\projects\\spotifyapi\\spotifyapi\\src\\App.js":"2","C:\\Users\\ID\\Desktop\\projects\\spotifyapi\\spotifyapi\\src\\components\\Header.js":"3","C:\\Users\\ID\\Desktop\\projects\\spotifyapi\\spotifyapi\\src\\components\\TopTracks.js":"4","C:\\Users\\ID\\Desktop\\projects\\spotifyapi\\spotifyapi\\src\\components\\Recommendations.js":"5","C:\\Users\\ID\\Desktop\\projects\\spotifyapi\\spotifyapi\\src\\components\\Sidebar.js":"6","C:\\Users\\ID\\Desktop\\projects\\spotifyapi\\spotifyapi\\src\\components\\Recent.js":"7","C:\\Users\\ID\\Desktop\\projects\\spotifyapi\\spotifyapi\\src\\axios.js":"8","C:\\Users\\ID\\Desktop\\projects\\spotifyapi\\spotifyapi\\src\\components\\Login.js":"9","C:\\Users\\ID\\Desktop\\projects\\spotifyapi\\spotifyapi\\src\\reportWebVitals.js":"10","C:\\Users\\ID\\Desktop\\projects\\spotifyapi\\spotifyapi\\src\\components\\SavedTracksContext.js":"11","C:\\Users\\ID\\Desktop\\projects\\spotifyapi\\spotifyapi\\src\\index.js":"12","C:\\Users\\ID\\Desktop\\projects\\spotifyapi\\spotifyapi\\src\\components\\selectedOptionStyle.js":"13"},{"size":3717,"mtime":1613202841489,"results":"14","hashOfConfig":"15"},{"size":2225,"mtime":1613203603053,"results":"16","hashOfConfig":"15"},{"size":2801,"mtime":1613135920854,"results":"17","hashOfConfig":"15"},{"size":3894,"mtime":1613203235100,"results":"18","hashOfConfig":"15"},{"size":3323,"mtime":1613202845092,"results":"19","hashOfConfig":"15"},{"size":2070,"mtime":1613130957968,"results":"20","hashOfConfig":"15"},{"size":2319,"mtime":1613202837763,"results":"21","hashOfConfig":"15"},{"size":150,"mtime":1613131214694,"results":"22","hashOfConfig":"15"},{"size":1440,"mtime":1613203926554,"results":"23","hashOfConfig":"15"},{"size":362,"mtime":1607914306397,"results":"24","hashOfConfig":"15"},{"size":440,"mtime":1612727595280,"results":"25","hashOfConfig":"15"},{"size":1054,"mtime":1612770187678,"results":"26","hashOfConfig":"15"},{"size":124,"mtime":1613129981752,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"by36cs",{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},"C:\\Users\\ID\\Desktop\\projects\\spotifyapi\\spotifyapi\\src\\components\\TopArtists.js",[],"C:\\Users\\ID\\Desktop\\projects\\spotifyapi\\spotifyapi\\src\\App.js",["58","59"],"import \"./App.css\";\nimport { useContext, useEffect, useState } from \"react\";\nimport Login from \"./components/Login\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport TopTracks from \"./components/TopTracks\";\nimport Recent from \"./components/Recent\";\nimport TopArtists from \"./components/TopArtists\";\nimport Sidebar from \"./components/Sidebar\";\nimport Recommendations from \"./components/Recommendations\";\nimport axios from './axios'\nimport { SavedTracksContext } from './components/SavedTracksContext'\nimport { useAlert } from 'react-alert'\nimport { AnimatePresence} from \"framer-motion\"\n\nfunction App() {\n  const [user, setUser] = useState('');\n  const [userName, setUserName] = useState('')\n  const [useruri, setUserUri] = useState('')\n  const [state, setState] = useContext(SavedTracksContext)\n  const alert = useAlert()\n\n  useEffect(() => {\n    axios.get(\"/me\").then((response) => {\n      setUser(response.data.images[0]?.url);\n      setUserName(response.data.display_name)\n      setUserUri(response.data.uri)\n      console.log(response.data)\n    });\n  }, []);\n\n  useEffect (() => {\n     function saveTrack() {\n      if (state) {\n    axios.post('/saved-tracks', {\n      track_id: state\n    }).then(alert.show(<div style={{fontSize: '13px'}}>Added to saved tracks</div>))\n  }\n}\n  saveTrack()\n  }, [state])\n\n  return (\n    <Router>\n      <div className=\"App\">\n        <AnimatePresence>\n        <Switch>\n        <Route path=\"/recommendations\">\n           <Sidebar/>\n            <Recommendations useruri={useruri} user={user} userName={userName}/>\n          </Route>\n        <Route path=\"/recently-played\">\n           <Sidebar/>\n            <Recent useruri={useruri} user={user} userName={userName}/>\n          </Route>\n        <Route path=\"/topartists\">\n            <Sidebar/>\n            <TopArtists useruri={useruri} user={user} userName={userName}/>\n          </Route>\n          <Route path=\"/toptracks\">\n            <Sidebar/>\n            <TopTracks useruri={useruri} user={user} userName={userName}/>\n          </Route>\n          <Route path=\"/\">\n            <Login />\n          </Route>\n        </Switch>\n        </AnimatePresence>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","C:\\Users\\ID\\Desktop\\projects\\spotifyapi\\spotifyapi\\src\\components\\Header.js",[],["60","61"],"C:\\Users\\ID\\Desktop\\projects\\spotifyapi\\spotifyapi\\src\\components\\TopTracks.js",["62","63"],"import React, { useEffect, useState, useContext } from \"react\";\r\nimport \"../styles/Body.css\";\r\nimport axios from \"../axios\";\r\nimport { IconButton } from \"@material-ui/core\";\r\nimport FavoriteBorderIcon from \"@material-ui/icons/FavoriteBorder\";\r\nimport Header from \"./Header\";\r\nimport { SavedTracksContext } from \"./SavedTracksContext\";\r\nimport { selectedOption } from \"./selectedOptionStyle\";\r\nimport { motion } from \"framer-motion\";\r\nimport { AnimatePresence} from \"framer-motion\"\r\n\r\nfunction TopTracks({ useruri, user, userName }) {\r\n  const [top_tracks, setTracks] = useState([]);\r\n  const [option, selectOption] = useState(\"All Time\");\r\n  const [img, setImg] = useState(\"\");\r\n  const id = top_tracks.map((track) => track.uri);\r\n  const [state, setState] = useContext(SavedTracksContext);\r\n\r\n  useEffect(() => {\r\n    if (option === \"All Time\") {\r\n      axios.get(\"/top-tracks/long_term\").then((res) => {\r\n        setTracks(res.data);\r\n      });\r\n    } else if (option === \"6 mos\") {\r\n      axios.get(\"/top-tracks/medium_term\").then((res) => {\r\n        setTracks(res.data);\r\n      });\r\n    } else if (option === \"3 mos\") {\r\n      axios.get(\"/top-tracks/short_term\").then((res) => {\r\n        setTracks(res.data);\r\n      });\r\n    }\r\n  }, [option]);\r\n\r\n  useEffect(() => {\r\n    setImg(\r\n      top_tracks[Math.floor(Math.random() * top_tracks.length)]?.album\r\n        ?.images[1]?.url\r\n    );\r\n  }, [top_tracks]);\r\n\r\n  const onClick = (id) => {\r\n    setState(id);\r\n  };\r\n\r\n  return (\r\n    <div className=\"page\">\r\n      <motion.div\r\n        initial={{ opacity: 0 }}\r\n        exit={{ opacity: 0 }}\r\n        animate={{ opacity: 1 }}\r\n      >\r\n        <div className=\"body\">\r\n          <Header\r\n            user={user}\r\n            userName={userName}\r\n            img={img}\r\n            title=\"Top Tracks\"\r\n            id={id}\r\n            option={option}\r\n            useruri={useruri}\r\n          />\r\n          <div className=\"options\">\r\n            <h2\r\n              onClick={() => {\r\n                selectOption(\"All Time\");\r\n              }}\r\n              className=\"option_element\"\r\n              style={option === \"All Time\" ? selectedOption : {}}\r\n            >\r\n              {\" \"}\r\n              All time{\" \"}\r\n            </h2>\r\n            <h2\r\n              onClick={() => {\r\n                selectOption(\"6 mos\");\r\n              }}\r\n              className=\"option_element\"\r\n              style={option === \"6 mos\" ? selectedOption : {}}\r\n            >\r\n              Last 6 months\r\n            </h2>\r\n\r\n            <h2\r\n              onClick={() => {\r\n                selectOption(\"3 mos\");\r\n              }}\r\n              className=\"option_element\"\r\n              style={option === \"3 mos\" ? selectedOption : {}}\r\n            >\r\n              Last month\r\n            </h2>\r\n          </div>\r\n\r\n\r\n          <ul className=\"list\">\r\n            {top_tracks?.map((track) => (\r\n              <div className=\"row\">\r\n                <div className=\"row_content\">\r\n                  <a href={track.uri}>\r\n                    <li className=\"list_elements\">\r\n                      <img\r\n                        className=\"img_tile\"\r\n                        src={track.album.images[2]?.url}\r\n                        alt=\"\"\r\n                      />\r\n                      <div className=\"titles\">\r\n                        <h3>{track.name} </h3>\r\n                        <h4>{track.artists[0].name} </h4>\r\n                      </div>\r\n                    </li>\r\n                  </a>\r\n                </div>\r\n                <div className=\"favourite\">\r\n                  <IconButton onClick={() => onClick(track.id)}>\r\n                    <FavoriteBorderIcon style={{ color: \"de4463\" }} />\r\n                  </IconButton>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      </motion.div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TopTracks;\r\n","C:\\Users\\ID\\Desktop\\projects\\spotifyapi\\spotifyapi\\src\\components\\Recommendations.js",["64"],"C:\\Users\\ID\\Desktop\\projects\\spotifyapi\\spotifyapi\\src\\components\\Sidebar.js",[],"C:\\Users\\ID\\Desktop\\projects\\spotifyapi\\spotifyapi\\src\\components\\Recent.js",[],"C:\\Users\\ID\\Desktop\\projects\\spotifyapi\\spotifyapi\\src\\axios.js",[],"C:\\Users\\ID\\Desktop\\projects\\spotifyapi\\spotifyapi\\src\\components\\Login.js",[],"C:\\Users\\ID\\Desktop\\projects\\spotifyapi\\spotifyapi\\src\\reportWebVitals.js",[],"C:\\Users\\ID\\Desktop\\projects\\spotifyapi\\spotifyapi\\src\\components\\SavedTracksContext.js",[],"C:\\Users\\ID\\Desktop\\projects\\spotifyapi\\spotifyapi\\src\\index.js",[],["65","66"],"C:\\Users\\ID\\Desktop\\projects\\spotifyapi\\spotifyapi\\src\\components\\selectedOptionStyle.js",[],{"ruleId":"67","severity":1,"message":"68","line":19,"column":17,"nodeType":"69","messageId":"70","endLine":19,"endColumn":25},{"ruleId":"71","severity":1,"message":"72","line":40,"column":6,"nodeType":"73","endLine":40,"endColumn":13,"suggestions":"74"},{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","replacedBy":"78"},{"ruleId":"67","severity":1,"message":"79","line":10,"column":10,"nodeType":"69","messageId":"70","endLine":10,"endColumn":25},{"ruleId":"67","severity":1,"message":"80","line":17,"column":10,"nodeType":"69","messageId":"70","endLine":17,"endColumn":15},{"ruleId":"67","severity":1,"message":"80","line":16,"column":10,"nodeType":"69","messageId":"70","endLine":16,"endColumn":15},{"ruleId":"75","replacedBy":"81"},{"ruleId":"77","replacedBy":"82"},"no-unused-vars","'setState' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'alert'. Either include it or remove the dependency array.","ArrayExpression",["83"],"no-native-reassign",["84"],"no-negated-in-lhs",["85"],"'AnimatePresence' is defined but never used.","'state' is assigned a value but never used.",["84"],["85"],{"desc":"86","fix":"87"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [alert, state]",{"range":"88","text":"89"},[1331,1338],"[alert, state]"]